@{
    ViewData["Title"] = "Criar Usuário";
}

@* @{
    Layout = null;
} *@

@model Lumos.Application.Dtos.UserDto

<div class="row">
    <div class="col-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "User")">Usuários</a>
                </li>
                <li class="breadcrumb-item active">
                    <a href="@Url.Action("Create", "User")">Adicionar</a>
                </li>
            </ol>
        </nav>
    </div>
</div>

<div class="container">
    <form id="registerUser">

        <p class="section-identification">Login</p>
        <div class="row" style="padding: 0 15px;">
            <div class="form-group col-md-3">
                <label for="Username" class="input-label">Nome Usuário <span class="input-label-required"></span></label>
                <input type="text" class="form-control" name="Username" id="Username" placeholder="" required="required">
            </div>

            <div class="form-group col-md-6">
                <label for="Email" class="input-label">E-mail <span class="input-label-required"></span></label>
                <input type="email" class="form-control" name="Email" id="Email" required="required">
            </div>

            <div class="form-group col-md-3">
                <label for="PasswordHash" class="input-label">Senha <span class="input-label-required"></span></label>
                <input type="text" class="form-control" name="PasswordHash" id="PasswordHash" placeholder="" required="required">
            </div>
        </div>


        <p class="section-identification">Identificação</p>
        <div class="row" style="padding: 0 15px;">
            <div class="form-group col-md-4">
                <label for="FullName" class="input-label">Nome <span class="input-label-required"></span></label>
                <input type="text" class="form-control" name="FullName" id="FullName" placeholder="" required="required">
            </div>

            <div class="form-group col-md-3">
                <label for="Cpf" class="input-label">CPF <span class="input-label-required"></span></label>
                <input type="text" class="form-control" name="Cpf" id="Cpf" required="required" maxlength="14">
            </div>

            <div class="form-group col-md-2">
                <label for="Gender" class="input-label">Gênero <span class="input-label-required"></span></label>
                <select name="Gender" id="Gender" class="form-control" required="required">
                    <option value="">-- Selecione --</option>
                    <option value="Masculino">Masculino</option>
                    <option value="Feminino">Feminino</option>
                    <option value="Não binário">Não binário</option>
                    <option value="Prefiro não informar">Prefiro não informar</option>
                </select>
            </div>

            <div class="form-group col-md-3">
                <label for="DateOfBirth" class="input-label">Aniversário</label>
                <input type="text" class="form-control" name="DateOfBirth" id="DateOfBirth" placeholder="Ex.: 01/01/1990">
            </div>
        </div>

        <p class="section-identification">Endereço</p>
        <div class="row" style="padding: 0 15px;">
            <div class="form-group col-md-5">
                <label for="Address.ZipCode" class="input-label">CEP <span class="input-label-required"></span></label>
                <input type="text" class="form-control" name="Address.ZipCode" id="ZipCode" required="required">
            </div>
            <div class="form-group col-md-5">
                <label for="Address.City" class="input-label">Cidade <span class="input-label-required"></span></label>
                <input type="text" class="form-control" name="Address.City" id="City" required="required">
            </div>
            <div class="form-group col-md-2">
                <label for="Address.State" class="input-label">UF <span class="input-label-required"></span></label>
                <input type="text" class="form-control" name="Address.State" id="State" required="required">
            </div>
        </div>
        <div class="row" style="padding: 0 15px;">
            <div class="form-group col-md-10">
                <label for="Address.Street" class="input-label">Endereço <span class="input-label-required"></span></label>
                <input type="text" class="form-control" name="Address.Street" id="Street" required="required">
            </div>
            <div class="form-group col-md-2">
                <label for="Address.Number" class="input-label">Nº <span class="input-label-required"></span></label>
                <input type="text" class="form-control" name="Address.Number" id="Number" required="required">
            </div>
        </div>



        <p class="section-identification">Contato</p>
        <div class="row" style="padding: 0 15px;">
            <div class="form-group col-md-6">
                <label for="Phone" class="input-label">Celular (com DDD) <span class="input-label-required"></span></label>
                <input type="text" class="form-control" name="Phone" id="Phone" required="required" maxlength="16" placeholder="Ex.: 1192345-6789">
            </div>
            <div class="form-group col-md-6">
                <label for="ContactMethod" class="input-label">Meio de Comunicação<span class="input-label-required"></span></label>
                <select name="ContactMethod" id="ContactMethod" class="form-control" required="required">
                    <option value="">-- Selecione --</option>
                    <option value="Telefone">Telefone</option>
                    <option value="Celular">Celular</option>
                    <option value="E-mail">E-mail</option>
                    <option value="WhatsApp">WhatsApp</option>
                </select>
            </div>
        </div>

        <div class="row" style="padding: 0 15px;">
            <div class="form-group col-md-12">
                <button class="btn btn-success save float-right" id="submitButton" type="submit">
                    Finalizar Cadastro
                </button>
            </div>
        </div>
    </form>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<script>
    //MASCARA PARA CPF
    document.getElementById('Cpf').addEventListener('input', function (event) {
        var cpf = event.target.value.replace(/\D/g, '');
        if (cpf.length > 3) {
            cpf = cpf.replace(/^(\d{3})(\d)/, '$1.$2');
        }
        if (cpf.length > 6) {
            cpf = cpf.replace(/^(\d{3})\.(\d{3})(\d)/, '$1.$2.$3');
        }
        if (cpf.length > 9) {
            cpf = cpf.replace(/^(\d{3})\.(\d{3})\.(\d{3})(\d)/, '$1.$2.$3-$4');
        }
        event.target.value = cpf;
    });

    // MASCARA PARA TELEFONE
    document.getElementById('Phone').addEventListener('input', function (event) {
        var phone = event.target.value.replace(/\D/g, '');
        if (phone.length > 10) {
            phone = '(' + phone.substring(0, 2) + ') ' + phone.substring(2, 7) + '-' + phone.substring(7, 11);
        } else if (phone.length > 6) {
            phone = '(' + phone.substring(0, 2) + ') ' + phone.substring(2, 6) + '-' + phone.substring(6);
        } else if (phone.length > 2) {
            phone = '(' + phone.substring(0, 2) + ') ' + phone.substring(2);
        }
        event.target.value = phone;
    });

    // MASCARA PARA CEP
    document.getElementById('ZipCode').addEventListener('input', function (event) {
        var zipCode = event.target.value.replace(/\D/g, '');
        if (zipCode.length > 5) {
            zipCode = zipCode.substring(0, 5) + '-' + zipCode.substring(5);
        }
        event.target.value = zipCode;
    });

    $(document).ready(function () {
        $('#preloader').hide();
        $('#registerUser').on('submit', function (e) {
            e.preventDefault();
            var formData = new FormData($('#registerUser')[0]);
            var submitButton = $('#submitButton');

            // Desativa o botão
            submitButton.prop('disabled', true);
            $('#preloader').show();

            $.ajax({
                url: '/User/Save',
                method: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (data) {
                    $('#toastSuccess .toast-body').text("Usuário salvo!");
                    $('#toastSuccess').toast('show');
                },
                error: function (xhr, status, error) {
                    submitButton.prop('disabled', false);

                    var errorMessage = "Ocorreu um erro ao processar a solicitação.";

                    if (xhr.status === 400) {
                        var errorResponse = JSON.parse(xhr.responseText);
                        if (errorResponse) {
                            var errorMessage = '';

                            // Verifica se há mensagens de erro e pega a primeira
                            for (var key in errorResponse) {
                                if (errorResponse[key].length > 0) {
                                    errorMessage = errorResponse[key][0];
                                    break; // Sai do loop após pegar a primeira mensagem
                                }
                            }

                            if (errorMessage) {
                                $('#toastError .toast-body').text(errorMessage);
                                $('#toastError').toast('show');
                            }
                        }
                    } else {
                        $('#toastError .toast-body').text(errorMessage);
                        $('#toastError').toast('show');
                    }
                },
                complete: function () {
                    // Reativa o botão após o término da requisição
                    submitButton.prop('disabled', false);

                    // Esconde o loading
                    $('#preloader').hide();
                }
            });
        });
    });
</script>
